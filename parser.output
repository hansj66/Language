Terminals unused in grammar

   GE
   LE
   EQ
   NE
   '>'
   '<'
   '-'
   '*'
   '/'
   UMINUS
   IFX
   ELSE
   IF
   WHILE
   ADD


Grammar

    0 $accept: program "end of file"

    1 program: function_declaration_list

    2 function_declaration_list: function_declaration
    3                          | function_declaration_list function_declaration

    4 function_declaration: Identifier Identifier '(' parameter_declaration_list ')' function_body

    5 parameter_declaration_list: parameter_declaration
    6                           | parameter_declaration_list ',' parameter_declaration

    7 parameter_declaration: Identifier Identifier '=' Integer
    8                      | Identifier Identifier

    9 function_body: '{' statement_list '}'

   10 statement_list: statement
   11               | statement_list statement

   12 statement: assignment
   13          | expression
   14          | print

   15 print: PRINT expression

   16 assignment: Identifier '=' expression

   17 expression: Identifier
   18           | Integer
   19           | expression '+' expression


Terminals, with rules where they appear

"end of file" (0) 0
'(' (40) 4
')' (41) 4
'*' (42)
'+' (43) 19
',' (44) 6
'-' (45)
'/' (47)
'<' (60)
'=' (61) 7 16
'>' (62)
'{' (123) 9
'}' (125) 9
error (256)
GE (258)
LE (259)
EQ (260)
NE (261)
UMINUS (262)
IFX (263)
ELSE (264)
IF (265)
WHILE (266)
ADD (267)
PRINT (268) 15
Integer (269) 7 18
Identifier (270) 4 7 8 16 17


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1, on right: 0
function_declaration_list (30)
    on left: 2 3, on right: 1 3
function_declaration (31)
    on left: 4, on right: 2 3
parameter_declaration_list (32)
    on left: 5 6, on right: 4 6
parameter_declaration (33)
    on left: 7 8, on right: 5 6
function_body (34)
    on left: 9, on right: 4
statement_list (35)
    on left: 10 11, on right: 9 11
statement (36)
    on left: 12 13 14, on right: 10 11
print (37)
    on left: 15, on right: 14
assignment (38)
    on left: 16, on right: 12
expression (39)
    on left: 17 18 19, on right: 13 15 16 19


State 0

    0 $accept: . program "end of file"

    Identifier  shift, and go to state 1

    program                    go to state 2
    function_declaration_list  go to state 3
    function_declaration       go to state 4


State 1

    4 function_declaration: Identifier . Identifier '(' parameter_declaration_list ')' function_body

    Identifier  shift, and go to state 5


State 2

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 6


State 3

    1 program: function_declaration_list .
    3 function_declaration_list: function_declaration_list . function_declaration

    Identifier  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function_declaration  go to state 7


State 4

    2 function_declaration_list: function_declaration .

    $default  reduce using rule 2 (function_declaration_list)


State 5

    4 function_declaration: Identifier Identifier . '(' parameter_declaration_list ')' function_body

    '('  shift, and go to state 8


State 6

    0 $accept: program "end of file" .

    $default  accept


State 7

    3 function_declaration_list: function_declaration_list function_declaration .

    $default  reduce using rule 3 (function_declaration_list)


State 8

    4 function_declaration: Identifier Identifier '(' . parameter_declaration_list ')' function_body

    Identifier  shift, and go to state 9

    parameter_declaration_list  go to state 10
    parameter_declaration       go to state 11


State 9

    7 parameter_declaration: Identifier . Identifier '=' Integer
    8                      | Identifier . Identifier

    Identifier  shift, and go to state 12


State 10

    4 function_declaration: Identifier Identifier '(' parameter_declaration_list . ')' function_body
    6 parameter_declaration_list: parameter_declaration_list . ',' parameter_declaration

    ')'  shift, and go to state 13
    ','  shift, and go to state 14


State 11

    5 parameter_declaration_list: parameter_declaration .

    $default  reduce using rule 5 (parameter_declaration_list)


State 12

    7 parameter_declaration: Identifier Identifier . '=' Integer
    8                      | Identifier Identifier .

    '='  shift, and go to state 15

    $default  reduce using rule 8 (parameter_declaration)


State 13

    4 function_declaration: Identifier Identifier '(' parameter_declaration_list ')' . function_body

    '{'  shift, and go to state 16

    function_body  go to state 17


State 14

    6 parameter_declaration_list: parameter_declaration_list ',' . parameter_declaration

    Identifier  shift, and go to state 9

    parameter_declaration  go to state 18


State 15

    7 parameter_declaration: Identifier Identifier '=' . Integer

    Integer  shift, and go to state 19


State 16

    9 function_body: '{' . statement_list '}'

    PRINT       shift, and go to state 20
    Integer     shift, and go to state 21
    Identifier  shift, and go to state 22

    statement_list  go to state 23
    statement       go to state 24
    print           go to state 25
    assignment      go to state 26
    expression      go to state 27


State 17

    4 function_declaration: Identifier Identifier '(' parameter_declaration_list ')' function_body .

    $default  reduce using rule 4 (function_declaration)


State 18

    6 parameter_declaration_list: parameter_declaration_list ',' parameter_declaration .

    $default  reduce using rule 6 (parameter_declaration_list)


State 19

    7 parameter_declaration: Identifier Identifier '=' Integer .

    $default  reduce using rule 7 (parameter_declaration)


State 20

   15 print: PRINT . expression

    Integer     shift, and go to state 21
    Identifier  shift, and go to state 28

    expression  go to state 29


State 21

   18 expression: Integer .

    $default  reduce using rule 18 (expression)


State 22

   16 assignment: Identifier . '=' expression
   17 expression: Identifier .

    '='  shift, and go to state 30

    $default  reduce using rule 17 (expression)


State 23

    9 function_body: '{' statement_list . '}'
   11 statement_list: statement_list . statement

    PRINT       shift, and go to state 20
    Integer     shift, and go to state 21
    Identifier  shift, and go to state 22
    '}'         shift, and go to state 31

    statement   go to state 32
    print       go to state 25
    assignment  go to state 26
    expression  go to state 27


State 24

   10 statement_list: statement .

    $default  reduce using rule 10 (statement_list)


State 25

   14 statement: print .

    $default  reduce using rule 14 (statement)


State 26

   12 statement: assignment .

    $default  reduce using rule 12 (statement)


State 27

   13 statement: expression .
   19 expression: expression . '+' expression

    '+'  shift, and go to state 33

    $default  reduce using rule 13 (statement)


State 28

   17 expression: Identifier .

    $default  reduce using rule 17 (expression)


State 29

   15 print: PRINT expression .
   19 expression: expression . '+' expression

    '+'  shift, and go to state 33

    $default  reduce using rule 15 (print)


State 30

   16 assignment: Identifier '=' . expression

    Integer     shift, and go to state 21
    Identifier  shift, and go to state 28

    expression  go to state 34


State 31

    9 function_body: '{' statement_list '}' .

    $default  reduce using rule 9 (function_body)


State 32

   11 statement_list: statement_list statement .

    $default  reduce using rule 11 (statement_list)


State 33

   19 expression: expression '+' . expression

    Integer     shift, and go to state 21
    Identifier  shift, and go to state 28

    expression  go to state 35


State 34

   16 assignment: Identifier '=' expression .
   19 expression: expression . '+' expression

    '+'  shift, and go to state 33

    $default  reduce using rule 16 (assignment)


State 35

   19 expression: expression . '+' expression
   19           | expression '+' expression .

    $default  reduce using rule 19 (expression)
